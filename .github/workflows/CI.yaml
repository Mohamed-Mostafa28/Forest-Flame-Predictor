name: CI
on: [push]
permissions: write-all
jobs:
  Run-Workflow:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: setup CML 
        uses: iterative/setup-cml@v1
      
      - name: setup DVC 
        uses: iterative/setup-dvc@v1

      - name: setup python         
        uses: actions/setup-python@v4
        with:
          python-version: '3.8' 
      
      - name: install requirements
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: check structure
        run: |     
          pip install .
          python template.py

      # - name: dvc pipeline
      #   env:
      #     REPO_TOKEN: ${{ secrets.GH_TOKEN }}
      #   run: |     
      #     dvc init  
      #     git rm -r --cached 'data/processed/prepaired_data.csv'
      #     git commit -m "stop tracking data/processed/prepaired_data.csv" 
      #     dvc repro
          
      #     # python ./algerianForestFires/src/preprocessing.py
      #     # python ./algerianForestFires/src/training.py
          

      # - name: Authenticate with GitHub
      #   env:
      #     GH_TOKEN: ${{ secrets.GH_TOKEN }}
      #   run: |
      #     git config --global user.email "mohamedmostafa012345012345@gmail.com"
      #     git config --global user.name "Mohamed_Mostafa"
      #     git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }}
      #     git checkout dev

      # - name: Initialize DVC
      #   run: |
      #     dvc init
      #     git add .dvc .gitignore
      #     git commit -m "Initialize DVC"

      # - name: Add data to DVC
      #   run: |
      #     dvc add data/processed/prepaired_data.csv
      #     git add data/processed/prepaired_data.csv.dvc .gitignore
      #     git commit -m "Track prepaired_data.csv with DVC"
      #     git push origin main


      - name: dvc pull
        env:
          GDRIVE_CREDENTIALS_DATA: ${{ secrets.GDRIVE_CREDENTIALS_DATA }}
        run: |       
          dvc pull ./data/source/Algerian_forest_fires_dataset_UPDATE.csv --run-cache


      - name: dvc pipeline
        env:
          REPO_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |     
        
          dvc repro
          
          # python ./algerianForestFires/src/preprocessing.py
          # python ./algerianForestFires/src/training.py








      - name: Create report
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
   
          echo "## Metrics" > report.md  
          cat ./output/info/RandomForest_model_info.txt >> report.md
          echo "## Confusion Matrix" >> report.md
          echo '![](./output/images/RandomForest_confusion_matrix.png "Confusion Matrix")' >> report.md
          cml comment create report.md























































# name: CML
# on: [push]
# permissions: write-all
# jobs:
#   train-and-report:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: '16'

#       - name: setup CML 
#         uses: iterative/setup-cml@v1

      
#       - name: setup DVC 
#         uses: iterative/setup-dvc@v1

#       - name: Set up gdrive
#         run: |
#           pip install gdrive
#           pip install dvc-gdrive

        
#       - name: setup python         
#         uses: actions/setup-python@v4
#         with:
#           python-version: '3.8' 
      

#       - name: install requirements
#         run: |
#           pip install --upgrade pip
#           pip install -r requirements.txt
#           echo "requirement done"
      
#       - name: pull DVC 
#         env:
#           GDRIVE_CREDENTIALS_DATA: ${{ secrets.GDRIVE_CREDENTIALS_DATA }}
#         run: |
#           dvc pull data --run-cache

#       - name: run experiment
#         env:
#           REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         run: |        
#           echo "will install lib"
#           pip install .
#           cd ..
#           echo "outing"
#           ls
#           python template.py
#           python ./src/deplib/run/exp_run.py
#           echo "experiment script done"
          

#       # - name: run experiment1
#       #   env:
#       #     REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       #   run: |        
#       #     ls  
#       #     python exp1.py
#       #     echo "exp1 done"
#       #     echo "#####################################"


#       # - name: run experiment2
#       #   env:
#       #     REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       #   run: |          
#       #     ls
#       #     python exp2.py
#       #     echo "exp2 done"
#       #     ls
#       #     echo "#####################################"

#       - name: Create report
#         env:
#           REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         run: |
#           # Create CML report
#           echo "Start Create CML report"
#           ls
#           cd ./output
#           ls 

#           echo "## Metrics" > report.md  

#           cat RandomForest_model_info.txt >> report.md

#           echo "## Confusion Matrix" >> report.md

#           echo '![](RandomForest_confusion_matrix.png "Confusion Matrix")' >> report.md

#           echo "CML report done"
#           cml comment create report.md
